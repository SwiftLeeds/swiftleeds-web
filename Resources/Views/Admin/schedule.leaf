<div class="d-flex align-items-center justify-content-between pt-xl-1 mb-3 pb-3">
    <h1 class="h2 mb-0">Schedule</h1>
    
    <div class="btn-toolbar" role="toolbar">
        <div class="btn-group me-2" role="group" id="day-chooser">
            <select id="day-select" class="form-select fw-bolder" id="select-input" data-event-filter="true">
                #for(day in days):
                <option value="#(day.id)" data-event="#(day.event.id)">#(day.name)</option>
                #endfor
            </select>
        </div>
        <div class="btn-group me-2" role="group">
            <button class="btn btn-outline-secondary" type="button" id="edit-day" data-swiftleeds-admin="days">
                <i class="bx bx-pencil me-sm-1"></i>
                Edit
            </button>
        </div>
        <div class="btn-group" role="group">
            <button class="btn btn-outline-secondary" type="button" data-swiftleeds-admin="days">
                <i class="bx bx-plus me-sm-1"></i>
                Add
            </button>
        </div>
    </div>
</div>

<ul class="list-unstyled mb-0" data-event-filter="true">
    <div class="alert alert-secondary hidden" role="alert">There are currently no slots for this year.</div>
    #for(slot in slots):
    <li class="d-flex align-items-center justify-content-between mb-2 border px-3 py-2 rounded" data-event="#(slot.day.event.id)" data-day="#(slot.day.id)">
      <div class="d-flex align-items-start me-3">
        <div>
          <div class="fw-medium text-nav mb-1">
            #if(slot.presentation.id):
              #(slot.presentation.title)
            #elseif(slot.activity):
              #(slot.activity.title)
            #endif
          </div>
          <span class="d-inline-block fs-sm text-muted pe-2 me-2">
          #(slot.startDate) - #sessionEnd(slot.startDate, first(slot.duration, slot.presentation.duration, slot.activity.duration))
          </span>
        </div>
      </div>
      <button data-swiftleeds-admin="slots/#(slot.id)" class="btn btn-outline-secondary px-3 px-sm-4">
        <i class="bx bx-pencil fs-xl ms-sm-n1 me-sm-1"></i>
        <span class="d-none d-sm-inline">Edit</span>
      </button>
    </li>
    #endfor
    
    <button data-swiftleeds-admin="slots" class="btn btn-outline-secondary px-3 px-sm-4">
        <i class="bx bx-plus fs-xl me-sm-1"></i>
        <span class="d-none d-sm-inline">Add Slot</span>
    </button>
</ul>

<script>
function refreshDayPicker() {
    const selectedEvent = localStorage['selectedEvent'];
    const selectedDay = localStorage['selectedDay'];
    
    // Change Day Dropdown
    $("#day-select option[data-event]").each((offset, element) => {
        element.hidden = !element.dataset.event.includes(selectedEvent);
    });
    
    // Reset Option
    if(selectedDay && selectedDay.length > 0) {
        const dayElement = $("#day-select option[value='" + selectedDay + "']");
        if (dayElement && dayElement.length > 0 && dayElement[0].dataset.event.includes(selectedEvent)) {
            $("#day-select").val(selectedDay);
        } else {
            $("#day-select").val($("#day-select option:not([hidden]):first").val());
        }
    } else {
        $("#day-select").val($("#day-select option:not([hidden]):first").val());
    }
    
    // Disable if empty
    $("#day-select").prop("disabled", $("#day-select option:not([hidden])").length == 0);
    
    // Update Slots
    refreshSlots();
}

function refreshSlots() {
    const selectedEvent = localStorage['selectedEvent'];
    const selectedDay = $("#day-select").find(":selected").val();
    
    // Update Edit Button
    $("#edit-day").data("swiftleeds-admin", "days/" + selectedDay)
    
    // Refilter page based on day selector
    $("[data-event-filter] li[data-day]").each((offset, element) => {
        if (element.dataset.day.includes(selectedDay)) {
            element.classList.remove('hidden');
        } else {
            element.classList.add('hidden');
        }
    });
    
    $("[data-event-filter]").each((offset, element) => {
        const list = $(element);
        const itemCount = list.find('li[data-event]').length;
        const hiddenItemCount = list.find('li[data-event].hidden').length;
        
        if (hiddenItemCount == itemCount) {
            list.find('.alert').removeClass('hidden');
        } else {
            list.find('.alert').addClass('hidden');
        }
    });
}

// Introduce some delay for jQuery to be added to scope
document.addEventListener("DOMContentLoaded", function() {
    refreshDayPicker();

    $("#event-select").on('change', (event) => {
        refreshDayPicker();
    });
    
    $("#day-select").on('change', (event) => {
        refreshSlots();
        localStorage['selectedDay'] = $(event.currentTarget).val();
    });
});
</script>
